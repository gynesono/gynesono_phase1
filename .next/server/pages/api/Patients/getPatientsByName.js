"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/Patients/getPatientsByName";
exports.ids = ["pages/api/Patients/getPatientsByName"];
exports.modules = {

/***/ "aws-sdk":
/*!**************************!*\
  !*** external "aws-sdk" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("aws-sdk");

/***/ }),

/***/ "(api)/./src/pages/api/Patients/getPatientsByName.js":
/*!*****************************************************!*\
  !*** ./src/pages/api/Patients/getPatientsByName.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* *\r\n * Copyright 2022 GyneSono Technologies or its affiliates. All Rights Reserved.\r\n *\r\n * This file is licensed under the Apache License, Version 2.0 (the \"License\").\r\n * You may not use this file except in compliance with the License. A copy of\r\n * the License is located at\r\n *\r\n * \r\n *\r\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the\r\n * specific language governing permissions and limitations under the License.\r\n*/ function handler(req, res) {\n    var AWS = __webpack_require__(/*! aws-sdk */ \"aws-sdk\");\n    AWS.config.update({\n        region: 'us-west-1',\n        accessKeyId: 'accessKeyId',\n        secretAccessKey: 'secretAccessKey',\n        endpoint: new AWS.Endpoint('http://localhost:8000')\n    });\n    var docClient = new AWS.DynamoDB.DocumentClient();\n    var tableName = \"Patients\";\n    var PatientID = 1;\n    var customerID = req.body.customerID;\n    var patientFirstName = req.body.patientFirstName; //\"22/02/2022\"; \n    var patientLastName = req.body.patientLastName;\n    var returnMessage = \"\";\n    // Do not remove this line - shows how filter expression can be used to further\n    // filter the query. So the Key Condition expression used partion key and sort key\n    //and then one can filter the expression\n    //FilterExpression: \"#dType = :deptType AND #ts > :daysPrior\"    \n    var params = {\n        TableName: tableName,\n        KeyConditionExpression: \"#cid = :customerid and Patient_id >= :ctr\",\n        ExpressionAttributeNames: {\n            \"#cid\": \"customer_id\"\n        },\n        ExpressionAttributeValues: {\n            \":customerid\": customerID,\n            \":ctr\": PatientID,\n            \":pfname\": patientFirstName,\n            \":plname\": patientLastName\n        },\n        //FilterExpression: \"#pfn = :pfname AND #pln = :plname\" patient_details#patient_last_name \n        FilterExpression: \"contains(patient_details.patient_first_name, :pfname) AND contains(patient_details.patient_last_name, :plname)\"\n    };\n    try {\n        var returnMessage = \"Fetching the information\";\n        docClient.query(params, function(err, data) {\n            if (err) {\n                console.error(\"Unable to get records from table. Error JSON:\", JSON.stringify(err, null, 2));\n            } else {\n                console.log(\"Fetched information\", JSON.stringify(data, null, 2));\n                res.json(JSON.stringify(data, null, 2));\n            }\n        });\n    } catch (err) {\n        console.log(\"Error: \", err);\n    }\n    res.status(200);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL1BhdGllbnRzL2dldFBhdGllbnRzQnlOYW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxFQVlFO0lBRUUsR0FBRyxDQUFDRyxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxDQUFTOztRQUd2QkcsTUFBTSxFQUFFLENBQVc7UUFDbkJDLFdBQVcsRUFBRSxDQUFhO1FBQzFCQyxlQUFlLEVBQUUsQ0FBaUI7O0lBRXRDOztJQUlBLEdBQUcsQ0FBQ00sU0FBUyxHQUFHLENBQVU7SUFDMUIsR0FBRyxDQUFDQyxTQUFTLEdBQUcsQ0FBQztJQUNqQixHQUFHLENBQUNDLFVBQVUsR0FBQ2hCLEdBQUcsQ0FBQ2lCLElBQUksQ0FBQ0QsVUFBVTtHQUU5QkUsTUFBZ0IsR0FBR2xCLEdBQUcsQ0FBQ2lCLElBQUksQ0FBQ0M7SUFFaEMsR0FBRyxDQUFDQyxNQUFBQSxtQkFBQUEsQ0FBQUEsd0JBQXNCRjtJQUUxQixHQUFHLENBQUNHLGFBQWE7SUFFckIsRUFBK0U7SUFDL0UsRUFBa0Y7SUFDbEYsRUFBd0M7SUFDeEMsRUFBaUU7SUFFN0QsR0FBRztRQUNLRSxTQUFTLEVBQUVSLFNBQVM7UUFDcEJTLHNCQUFzQjtRQUN0QkM7WUFDSSxDQUFNLE9BQUUsQ0FBYTtRQUV6QixDQUFDO1FBQ0RDLHlCQUF5QixFQUFFLENBQUM7WUFDeEIsQ0FBYSxjQUFFVDtZQUNmLENBQU0sT0FBRUQsU0FBUztZQUNqQixDQUFTLFVBQUVHLGdCQUFnQjtZQUMzQixDQUFTLFVBQUVDLGVBQWU7UUFDOUIsQ0FBQztRQUNILEVBQTBGO1FBQzFGTyxnQkFBZ0IsRUFBRSxDQUFnSDtJQUVwSSxDQUFDO0lBRUwsR0FBRyxFQUFDO1FBQ0EsR0FBRyxDQUFDTixhQUFhLEdBQUcsQ0FBMEI7UUFDOUNUO1lBQ0QsRUFBRSxFQUFFaUIsR0FBRyxFQUFFLENBQUM7Z0JBQ0pFLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDLENBQStDO1lBQ2pFLENBQUMsTUFBTSxDQUFDO2dCQUNKRCxPQUFPLENBQUNJLEdBQUcsQ0FBQyxDQUFxQjtnQkFDakNqQyxHQUFHLENBQUNrQyxJQUFJLENBQUNILElBQUksQ0FBQ0M7O1FBR3RCLENBQUM7SUFFRSxDQUFDLENBQUMsS0FBSyxFQUFDTCxHQUFHLEVBQUMsQ0FBQzs7SUFFYixDQUFDO0lBQ0QzQixHQUFHLENBQUNtQyxNQUFNLENBQUMsR0FBRztBQUVsQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3luZXNvbm9waGFzZTIvLi9zcmMvcGFnZXMvYXBpL1BhdGllbnRzL2dldFBhdGllbnRzQnlOYW1lLmpzPzNmMjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogKlxyXG4gKiBDb3B5cmlnaHQgMjAyMiBHeW5lU29ubyBUZWNobm9sb2dpZXMgb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFRoaXMgZmlsZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpLlxyXG4gKiBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIEEgY29weSBvZlxyXG4gKiB0aGUgTGljZW5zZSBpcyBsb2NhdGVkIGF0XHJcbiAqXHJcbiAqIFxyXG4gKlxyXG4gKiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1JcclxuICogQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuKi9cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xyXG4gICAgdmFyIEFXUyA9IHJlcXVpcmUoXCJhd3Mtc2RrXCIpO1xyXG5cclxuICAgIEFXUy5jb25maWcudXBkYXRlKHtcclxuICAgICAgICByZWdpb246ICd1cy13ZXN0LTEnLFxyXG4gICAgICAgIGFjY2Vzc0tleUlkOiAnYWNjZXNzS2V5SWQnLFxyXG4gICAgICAgIHNlY3JldEFjY2Vzc0tleTogJ3NlY3JldEFjY2Vzc0tleScsXHJcbiAgICAgICAgZW5kcG9pbnQ6IG5ldyBBV1MuRW5kcG9pbnQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMCcpLFxyXG4gICAgfSk7XHJcblxyXG4gICAgdmFyIGRvY0NsaWVudCA9IG5ldyBBV1MuRHluYW1vREIuRG9jdW1lbnRDbGllbnQoKTtcclxuXHJcbiAgICB2YXIgdGFibGVOYW1lID0gXCJQYXRpZW50c1wiO1xyXG4gICAgdmFyIFBhdGllbnRJRCA9IDE7XHJcbiAgICB2YXIgY3VzdG9tZXJJRD1yZXEuYm9keS5jdXN0b21lcklEO1xyXG5cclxuICAgIHZhciBwYXRpZW50Rmlyc3ROYW1lID0gcmVxLmJvZHkucGF0aWVudEZpcnN0TmFtZTsvL1wiMjIvMDIvMjAyMlwiOyBcclxuICAgXHJcbiAgICB2YXIgcGF0aWVudExhc3ROYW1lID0gcmVxLmJvZHkucGF0aWVudExhc3ROYW1lO1xyXG4gICAgXHJcbiAgICB2YXIgcmV0dXJuTWVzc2FnZSA9IFwiXCI7XHJcblxyXG4vLyBEbyBub3QgcmVtb3ZlIHRoaXMgbGluZSAtIHNob3dzIGhvdyBmaWx0ZXIgZXhwcmVzc2lvbiBjYW4gYmUgdXNlZCB0byBmdXJ0aGVyXHJcbi8vIGZpbHRlciB0aGUgcXVlcnkuIFNvIHRoZSBLZXkgQ29uZGl0aW9uIGV4cHJlc3Npb24gdXNlZCBwYXJ0aW9uIGtleSBhbmQgc29ydCBrZXlcclxuLy9hbmQgdGhlbiBvbmUgY2FuIGZpbHRlciB0aGUgZXhwcmVzc2lvblxyXG4vL0ZpbHRlckV4cHJlc3Npb246IFwiI2RUeXBlID0gOmRlcHRUeXBlIEFORCAjdHMgPiA6ZGF5c1ByaW9yXCIgICAgXHJcblxyXG4gICAgdmFyIHBhcmFtcyA9IHtcclxuICAgICAgICAgICAgVGFibGVOYW1lOiB0YWJsZU5hbWUsXHJcbiAgICAgICAgICAgIEtleUNvbmRpdGlvbkV4cHJlc3Npb246IFwiI2NpZCA9IDpjdXN0b21lcmlkIGFuZCBQYXRpZW50X2lkID49IDpjdHJcIixcclxuICAgICAgICAgICAgRXhwcmVzc2lvbkF0dHJpYnV0ZU5hbWVzOntcclxuICAgICAgICAgICAgICAgIFwiI2NpZFwiOiBcImN1c3RvbWVyX2lkXCJcclxuICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIEV4cHJlc3Npb25BdHRyaWJ1dGVWYWx1ZXM6IHtcclxuICAgICAgICAgICAgICAgIFwiOmN1c3RvbWVyaWRcIjogY3VzdG9tZXJJRCxcclxuICAgICAgICAgICAgICAgIFwiOmN0clwiOiBQYXRpZW50SUQsXHJcbiAgICAgICAgICAgICAgICBcIjpwZm5hbWVcIjogcGF0aWVudEZpcnN0TmFtZSxcclxuICAgICAgICAgICAgICAgIFwiOnBsbmFtZVwiOiBwYXRpZW50TGFzdE5hbWVcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgIC8vRmlsdGVyRXhwcmVzc2lvbjogXCIjcGZuID0gOnBmbmFtZSBBTkQgI3BsbiA9IDpwbG5hbWVcIiBwYXRpZW50X2RldGFpbHMjcGF0aWVudF9sYXN0X25hbWUgXHJcbiAgICAgICAgICBGaWx0ZXJFeHByZXNzaW9uOiBcImNvbnRhaW5zKHBhdGllbnRfZGV0YWlscy5wYXRpZW50X2ZpcnN0X25hbWUsIDpwZm5hbWUpIEFORCBjb250YWlucyhwYXRpZW50X2RldGFpbHMucGF0aWVudF9sYXN0X25hbWUsIDpwbG5hbWUpXCIgXHJcbiAgICAgICAgLy8gIEZpbHRlckV4cHJlc3Npb246IFwicGF0aWVudF9kZXRhaWxzLnBhdGllbnRfZmlyc3RfbmFtZSA9IDpwZm5hbWUgQU5EIHBhdGllbnRfZGV0YWlscy5wYXRpZW50X2xhc3RfbmFtZSA9IDpwbG5hbWVcIiBcclxuICAgICAgICB9O1xyXG5cclxuICAgIHRyeXtcclxuICAgICAgICB2YXIgcmV0dXJuTWVzc2FnZSA9IFwiRmV0Y2hpbmcgdGhlIGluZm9ybWF0aW9uXCI7XHJcbiAgICAgICAgZG9jQ2xpZW50LnF1ZXJ5KHBhcmFtcywgZnVuY3Rpb24oZXJyLCBkYXRhKSB7XHJcbiAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVW5hYmxlIHRvIGdldCByZWNvcmRzIGZyb20gdGFibGUuIEVycm9yIEpTT046XCIsIEpTT04uc3RyaW5naWZ5KGVyciwgbnVsbCwgMikpO1xyXG4gICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgY29uc29sZS5sb2coXCJGZXRjaGVkIGluZm9ybWF0aW9uXCIsIEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpKTtcclxuICAgICAgICAgICAgIHJlcy5qc29uKEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpKVxyXG4gICAgICAgICB9XHJcbiAgICAgICAgIFxyXG4gICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIH0gY2F0Y2goZXJyKXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJFcnJvcjogXCIsIGVycilcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVzLnN0YXR1cygyMDApO1xyXG5cclxuICAgIH1cclxuIl0sIm5hbWVzIjpbImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJBV1MiLCJyZXF1aXJlIiwiY29uZmlnIiwidXBkYXRlIiwicmVnaW9uIiwiYWNjZXNzS2V5SWQiLCJzZWNyZXRBY2Nlc3NLZXkiLCJlbmRwb2ludCIsIkVuZHBvaW50IiwiZG9jQ2xpZW50IiwiRHluYW1vREIiLCJEb2N1bWVudENsaWVudCIsInRhYmxlTmFtZSIsIlBhdGllbnRJRCIsImN1c3RvbWVySUQiLCJib2R5IiwicGF0aWVudEZpcnN0TmFtZSIsInBhdGllbnRMYXN0TmFtZSIsInJldHVybk1lc3NhZ2UiLCJwYXJhbXMiLCJUYWJsZU5hbWUiLCJLZXlDb25kaXRpb25FeHByZXNzaW9uIiwiRXhwcmVzc2lvbkF0dHJpYnV0ZU5hbWVzIiwiRXhwcmVzc2lvbkF0dHJpYnV0ZVZhbHVlcyIsIkZpbHRlckV4cHJlc3Npb24iLCJxdWVyeSIsImVyciIsImRhdGEiLCJjb25zb2xlIiwiZXJyb3IiLCJKU09OIiwic3RyaW5naWZ5IiwibG9nIiwianNvbiIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/Patients/getPatientsByName.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/Patients/getPatientsByName.js"));
module.exports = __webpack_exports__;

})();