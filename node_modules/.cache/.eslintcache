[{"D:\\Gynesono\\Workspace\\gynophase3\\src\\index.js":"1","D:\\Gynesono\\Workspace\\gynophase3\\src\\App.js":"2","D:\\Gynesono\\Workspace\\gynophase3\\src\\Login.js":"3","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Dashboard.js":"4","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\AppointmentSearch.js":"5","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\CustomerRegistation.js":"6","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\CustomerSearch.js":"7","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\CustomerAccounting.js":"8","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\ReportPaymentsByCustomers.js":"9","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\AppointmentUpdate.js":"10","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\AppointmentAdd.js":"11","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\AddServices.js":"12","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\CustomerUpdate.js":"13","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Navigation\\Leftmenu.js":"14","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Navigation\\Header.js":"15","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Dashboard_Component\\DashAppoint.js":"16","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Dashboard_Component\\DashCancel.js":"17","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Dashboard_Component\\DashAttend.js":"18","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Dashboard_Component\\DashPending.js":"19"},{"size":170,"mtime":1645041263716,"results":"20","hashOfConfig":"21"},{"size":2128,"mtime":1647373784336,"results":"22","hashOfConfig":"21"},{"size":5831,"mtime":1647145519975,"results":"23","hashOfConfig":"21"},{"size":11393,"mtime":1647406760873,"results":"24","hashOfConfig":"21"},{"size":8818,"mtime":1647382075696,"results":"25","hashOfConfig":"21"},{"size":19787,"mtime":1647404982834,"results":"26","hashOfConfig":"21"},{"size":12359,"mtime":1647362871420,"results":"27","hashOfConfig":"21"},{"size":15434,"mtime":1647314980138,"results":"28","hashOfConfig":"21"},{"size":14845,"mtime":1646774989768,"results":"29","hashOfConfig":"21"},{"size":6905,"mtime":1647406671826,"results":"30","hashOfConfig":"21"},{"size":7936,"mtime":1647403398027,"results":"31","hashOfConfig":"21"},{"size":11687,"mtime":1647404138996,"results":"32","hashOfConfig":"21"},{"size":20536,"mtime":1647405120215,"results":"33","hashOfConfig":"21"},{"size":3007,"mtime":1647395164137,"results":"34","hashOfConfig":"21"},{"size":3091,"mtime":1647026203650,"results":"35","hashOfConfig":"21"},{"size":910,"mtime":1647053120971,"results":"36","hashOfConfig":"21"},{"size":551,"mtime":1647362850438,"results":"37","hashOfConfig":"21"},{"size":654,"mtime":1645507576349,"results":"38","hashOfConfig":"21"},{"size":650,"mtime":1647121617027,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jm1rxh",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Gynesono\\Workspace\\gynophase3\\src\\index.js",[],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\App.js",[],[],["104","105"],"D:\\Gynesono\\Workspace\\gynophase3\\src\\Login.js",["106","107","108","109","110"],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Dashboard.js",["111","112","113"],[],"import { Link } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport DashAppoint from './Dashboard_Component/DashAppoint'\r\nimport DashAttend from './Dashboard_Component/DashAttend';\r\nimport DashCancel from './Dashboard_Component/DashCancel';\r\nimport DashPending from './Dashboard_Component/DashPending';\r\nimport Leftmenu from './Navigation/Leftmenu';\r\nimport Header from './Navigation/Header';\r\nimport AppointmentUpdate from './AppointmentUpdate';\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        response: '',\r\n        post: '',\r\n        responseToPost: '',\r\n        customerID: '',\r\n        AppointmentEdit:true ,\r\n    };\r\n\r\n    componentDidMount() {\r\n        const tokenString = sessionStorage.getItem('token');\r\n        const userToken = JSON.parse(tokenString);\r\n        const customerIDString = sessionStorage.getItem('customerID');\r\n        const customerID = parseInt(customerIDString);\r\n        this.setState({ Token: userToken });\r\n        this.setState({ customerID: customerID });\r\n\r\n        const roleString = sessionStorage.getItem('userRole');\r\n        const userRole = JSON.parse(roleString);\r\n        this.setState({ userRole: userRole });\r\n        this.handleOnload(customerID)\r\n    }\r\n\r\n\r\n    CancelStatus = async (key) => {\r\n        const requestHeader = {\r\n            \"content-Type\": \"application/json\",\r\n            accessIDKey: this.state.Token\r\n        };\r\n    \r\n        const response = await fetch('http://localhost:3000/api/Appointments/setAppointmentsStatus', {\r\n          method: 'POST',\r\n          headers: requestHeader,\r\n          body: JSON.stringify({appointmentID: key,\r\n            customerID:this.state.customerID,\r\n            appointmentStatus: \"Cancelled\"\r\n\r\n          }),\r\n          \r\n        });\r\n       \r\n        window.location.reload(true);\r\n      }\r\n\r\n\r\n\r\n    handleOnload = async (customerID) => {\r\n        const requestHeader = {\r\n            \"content-Type\": \"application/json\",\r\n            accessIDKey: this.state.Token\r\n        };\r\n\r\n        const response = await fetch('http://localhost:3000/api/Appointments/getAppointmentsforDash', {\r\n            method: 'POST',\r\n            headers: requestHeader,\r\n            body: JSON.stringify({\r\n                customerID: customerID\r\n            }),\r\n\r\n        });\r\n\r\n\r\n        const body = await response.json();\r\n\r\n        this.setState({ responseToPost: body.Items });\r\n    };\r\n\r\n    DashCancelCount = () => {\r\n        let count=0;\r\n        for (var i=0;i<this.state.responseToPost.length;i++)\r\n        {\r\n        if(this.state.responseToPost[i].appointment_status===\"Cancelled\")\r\n        {\r\n            count++;\r\n        }\r\n        \r\n        }\r\n        return count;\r\n    }\r\n    DashPandingCount = () => {\r\n        let count=0;\r\n        for (var i=0;i<this.state.responseToPost.length;i++)\r\n        {\r\n        if(this.state.responseToPost[i].appointment_status===\"Open\")\r\n        {\r\n            count++;\r\n        }\r\n        \r\n        }\r\n        return count;\r\n    }\r\n    handleEdit = (items) => {\r\n        this.setState({ FName: items.patient_details.patient_first_name });\r\n        this.setState({ LName: items.patient_details.patient_last_name });\r\n        this.setState({ Mobile: items.patient_details.patient_contact_no });\r\n        this.setState({ appointment_ID: items.appointment_id });\r\n        this.setState({ Remark: items.patient_details.patient_appointment_remarks });\r\n        this.setState({ AppTime: items.appointment_time });\r\n        this.setState({ AppDate: items.appointment_date });\r\n        \r\n        \r\n    \r\n        this.setState({ AppointmentEdit: false });\r\n        console.log(items)\r\n      }\r\n    \r\n\r\n    render() {\r\n        if(!this.state.AppointmentEdit){\r\n            return(\r\n              <AppointmentUpdate ptFirstName={this.state.FName} ptLastName={this.state.LName} mn={this.state.Mobile} datee={this.state.AppDate} tm={this.state.AppTime} rm={this.state.Remark} appointment_id={this.state.appointment_ID} />\r\n            )}\r\n            else{\r\n        return (\r\n            <div className=\"main-wrapper\">\r\n\r\n\r\n                <div className=\"page-wrapper\">\r\n                    <div className=\"content\">\r\n                        <div className=\"row\">\r\n                            <Header />\r\n                            <Leftmenu />\r\n                            <DashAppoint dashAppoint={this.state.responseToPost.length} />\r\n                            <DashAttend />\r\n                            <DashCancel dashCancel={this.DashCancelCount()}/> \r\n                            <DashPending dashPanding={this.DashPandingCount()}/>\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-6 col-lg-8 col-xl-8 appointment-table\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <div className=\"row\">\r\n\r\n                                            <div className=\"col-sm-6 col-3\"><h4 className=\"page-title\">Today's Appointments</h4></div>\r\n                                            <div className=\"col-sm-6 col-9 text-right m-b-20\"><Link to=\"/appointmentAdd\"\r\n                                                className=\"btn btn btn-primary  float-right\"\r\n                                                href=\"appointment-add.html\"><i className=\"fa fa-plus\"></i> Add Appointment</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <table className=\"table table-border table-striped custom-table datatable mb-0\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                             \r\n                                                    <th className=\"ant-table-cell\">Customer Name</th>\r\n                                                    <th className=\"ant-table-cell\">Appointment Date</th>\r\n                                                    <th className=\"ant-table-cell\">Appointment Time</th>\r\n                                                    <th className=\"ant-table-cell\">Status</th>\r\n                                                    <th className=\"ant-table-cell\">Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n\r\n                                            {this.state.responseToPost.length > 0 && (\r\n                                                <tbody>\r\n                                                    {this.state.responseToPost.map((items) => (\r\n\r\n\r\n                                                        <tr key={items.appointment_id}>\r\n                                                          \r\n                                                            <td>{`${items.patient_details.patient_first_name} ${items.patient_details.patient_last_name}`}</td>\r\n                                                            <td>{items.appointment_date}</td>\r\n                                                            <td>{items.appointment_time}</td>\r\n                                                            <td className=\"text-warning\">{items.appointment_status}</td>\r\n                                                            <td className=\"text-right\">\r\n                                                                <div className=\"dropdown dropdown-action\">\r\n                                                                    <a className=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                                                        aria-expanded=\"false\"><i className=\"fa fa-ellipsis-v\"></i></a>\r\n                                                                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                                                        {/* <Link to={\"/appointmentUpdate/\" + items.appointment_id} className=\"dropdown-item\" ><i\r\n                                                                            className=\"fa fa-pencil m-r-5\"></i> Edit</Link> */}\r\n                                                                            <button  className=\"dropdown-item\" onClick={() => this.handleEdit(items)}><i\r\n                                className=\"fa fa-pencil m-r-5\"></i> Edit</button>\r\n                                                                        <button className=\"dropdown-item\" data-toggle=\"modal\"\r\n                                                            data-target=\"#delete_patient\" onClick={()=>this.CancelStatus(items.appointment_id)}><i className=\"fa fa-trash-o m-r-5\"></i> Cancel</button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ))}</tbody>\r\n                                            )}\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-6 col-lg-4 col-xl-4\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <h5 className=\"page-title\">Customer Total</h5>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <p className=\"chart-label\"><i className=\"fa fa-caret-up\"></i>15% Higher than Last Month</p>\r\n                                            <img src=\"./assets/img/report.png\" width=\"100%\" />\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\r\n                                                <div className=\"dash-widget\">\r\n                                                    <div className=\"dash-widget-info text-right\">\r\n                                                        MTD<h3><a href=\"report-payments-by-customers.html\" style={{ color: 'gray' }}>150</a></h3>\r\n                                                        YTD<h3><a href=\"report-payments-by-customers.html\" style={{ color: 'gray' }}>6,530</a></h3>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"sidebar-overlay\" data-reff=\"\"></div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}}\r\n\r\nexport default Dashboard;","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\AppointmentSearch.js",["114","115"],[],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Leftmenu from './Navigation/Leftmenu';\r\nimport Header from './Navigation/Header';\r\nimport CustomerRegistation from './CustomerRegistation';\r\nimport AppointmentUpdate from './AppointmentUpdate';\r\n\r\nclass AppointmentSearch extends Component {\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: '',\r\n    date: '',\r\n    Registation: true,\r\n    AppointmentEdit: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const tokenString = sessionStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    const customerIDString = sessionStorage.getItem('customerID');\r\n    const customerID = parseInt(customerIDString);\r\n    this.setState({ Token: userToken });\r\n    this.setState({ customerID: customerID });\r\n    this.handleOnload(customerID);\r\n\r\n  }\r\n  handleOnload = async (customerID) => {\r\n\r\n    const requestHeader = {\r\n      \"content-Type\": \"application/json\",\r\n      accessIDKey: this.state.Token\r\n    };\r\n    const response = await fetch('http://localhost:3000/api/Appointments/getAppointmentsforDash', {\r\n      method: 'POST',\r\n      headers: requestHeader,\r\n      body: JSON.stringify({\r\n        customerID: customerID,\r\n      }),\r\n    });\r\n\r\n    const body = await response.json();\r\n    this.setState({ responseToPost: body.Items });\r\n  }\r\n\r\n\r\n  handleDate = (str) => {\r\n\r\n    const m = str.split(\"-\");\r\n    let str_date = m[2] + \"/\" + m[1] + \"/\" + m[0];\r\n    this.setState({ date: str_date })\r\n\r\n  }\r\n  CancelStatus = async (key) => {\r\n    const requestHeader = {\r\n      \"content-Type\": \"application/json\",\r\n      accessIDKey: this.state.Token\r\n    };\r\n   \r\n\r\n    const response = await fetch('http://localhost:3000/api/Appointments/setAppointmentsStatus', {\r\n      method: 'POST',\r\n      headers: requestHeader,\r\n      body: JSON.stringify({\r\n        appointmentID: key,\r\n        customerID: this.state.customerID,\r\n        appointmentStatus: \"Cancelled\"\r\n      }),\r\n\r\n    });\r\n    window.location.reload(true);\r\n  }\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const requestHeader = {\r\n      \"content-Type\": \"application/json\",\r\n      accessIDKey: this.state.Token\r\n    };\r\n    const response = await fetch('http://localhost:3000/api/Appointments/getAllAppointmentsByDate', {\r\n      method: 'POST',\r\n      headers: requestHeader,\r\n      body: JSON.stringify({\r\n        appointmentDate: this.state.date,\r\n        customerID: this.state.customerID,\r\n\r\n      }),\r\n    });\r\n\r\n    const body = await response.json();\r\n    this.setState({ responseToPost: body.Items });\r\n  };\r\n\r\n  handleName = (items) => {\r\n   this.setState({ FirstName: items.patient_details.patient_first_name });\r\n    this.setState({ LastName: items.patient_details.patient_last_name });\r\n    this.setState({ Contact: items.patient_details.patient_contact_no });\r\n    this.setState({ Registation: false });\r\n    console.log(items)\r\n  }\r\n  \r\n  handleEdit = (items) => {\r\n    this.setState({ FName: items.patient_details.patient_first_name });\r\n    this.setState({ LName: items.patient_details.patient_last_name });\r\n    this.setState({ Mobile: items.patient_details.patient_contact_no });\r\n    this.setState({ appointment_ID: items.appointment_id });\r\n    this.setState({ Remark: items.patient_details.patient_appointment_remarks });\r\n    this.setState({ AppTime: items.appointment_time });\r\n    this.setState({ AppDate: items.appointment_date });\r\n    \r\n    \r\n\r\n    this.setState({ AppointmentEdit: false });\r\n    console.log(items)\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.Registation) {\r\n      return (\r\n        <CustomerRegistation ptFirstName={this.state.FirstName} ptLastName={this.state.LastName} mn={this.state.Contact} />)\r\n    }\r\n    else \r\n    if(!this.state.AppointmentEdit){\r\n      return(\r\n        <AppointmentUpdate ptFirstName={this.state.FName} ptLastName={this.state.LName} mn={this.state.Mobile} datee={this.state.AppDate} tm={this.state.AppTime} rm={this.state.Remark} appointment_id={this.state.appointment_ID} />\r\n      )\r\n\r\n    }\r\n    else {\r\n      return (\r\n\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"page-wrapper\">\r\n            <div className=\"content\">\r\n              <Header />\r\n              <Leftmenu />\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-4 col-3\">\r\n                  <h4 className=\"page-title\">Appointments</h4>\r\n                </div>\r\n                <div className=\"col-sm-8 col-9 text-right m-b-20\">\r\n                  <Link to=\"/appointmentAdd\" className=\"btn btn btn-primary float-right\"><i\r\n                    className=\"fa fa-plus\"></i> Add Appointment</Link>\r\n                </div>\r\n              </div>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"row filter-row\">\r\n                  <div className=\"col-xl-2\">\r\n                    <label className=\"focus-label\">Appointment Date</label>\r\n                  </div>\r\n                  <div className=\"col-xl-2\">\r\n                    <input type=\"date\" className=\"form-control floating\" value={this.state.aptDate1} onChange={e => this.handleDate(e.target.value)} required/>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-xl-1\">\r\n\r\n                    <button type=\"submit\" className=\"btn btn-success btn-block\" >Search</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              <table className=\"table table-border table-striped custom-table datatable mb-0\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"ant-table-cell\">Appointment ID</th>\r\n                    <th className=\"ant-table-cell\">Customer Name</th>\r\n                    <th className=\"ant-table-cell\">Appointment Date</th>\r\n                    <th className=\"ant-table-cell\">Appointment Time</th>\r\n                    <th className=\"ant-table-cell\">Contact Number</th>\r\n                    <th className=\"ant-table-cell\">Remark</th>\r\n                    <th className=\"ant-table-cell\">Status</th>\r\n                    <th className=\"ant-table-cell\">Register</th>\r\n                    <th className=\"ant-table-cell\">Action</th>\r\n\r\n                  </tr>\r\n                </thead>\r\n\r\n\r\n                {this.state.responseToPost.length > 0 && (\r\n                  <tbody>\r\n\r\n                    {this.state.responseToPost.map((items) => (\r\n\r\n\r\n                      <tr key={items.appointment_id}>\r\n                        <td>{items.appointment_id}</td>\r\n                        <td>{`${items.patient_details.patient_first_name} ${items.patient_details.patient_last_name}`}</td>\r\n                        <td>{items.appointment_date}</td>\r\n                        <td>{items.appointment_time}</td>\r\n                        <td>{items.patient_details.patient_contact_no}</td>\r\n                        <td>{items.patient_details.patient_appointment_remarks}</td>\r\n                        <td className=\"text-warning\">{items.appointment_status}</td>\r\n                        <td>\r\n                          <button className=\"btn btn btn-primary float-right\" onClick={() => this.handleName(items)}><i\r\n                            className=\"fa fa-plus\" ></i> Register Customer</button>\r\n\r\n                        </td>\r\n\r\n                        <td className=\"text-right\">\r\n                          <div className=\"dropdown dropdown-action\">\r\n                            <a className=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                              aria-expanded=\"false\"><i className=\"fa fa-ellipsis-v\"></i></a>\r\n                            <div className=\"dropdown-menu dropdown-menu-right\">\r\n                              {/* <Link to={\"/appointmentUpdate/\" + items.appointment_id} className=\"dropdown-item\"><i\r\n                                className=\"fa fa-pencil m-r-5\"></i> Edit</Link> */}\r\n                                <button  className=\"dropdown-item\" onClick={() => this.handleEdit(items)}><i\r\n                                className=\"fa fa-pencil m-r-5\"></i> Edit</button>\r\n\r\n                              <button className=\"dropdown-item\" data-toggle=\"modal\"\r\n                                data-target=\"#delete_patient\" onClick={() => this.CancelStatus(items.appointment_id)}><i className=\"fa fa-trash-o m-r-5\"></i> Cancel</button>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n\r\n\r\n                    ))}</tbody>\r\n                )}\r\n              </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"sidebar-overlay\" data-reff=\"\"></div>\r\n        </div>\r\n\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default AppointmentSearch;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\CustomerRegistation.js",[],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\CustomerSearch.js",["116","117"],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\CustomerAccounting.js",["118","119","120"],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\ReportPaymentsByCustomers.js",["121"],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\AppointmentUpdate.js",["122"],[],"import { Link } from 'react-router-dom';\r\nimport Leftmenu from './Navigation/Leftmenu';\r\nimport Header from './Navigation/Header';\r\nimport React, { Component } from \"react\";\r\n\r\nclass AppointmentUpdate extends Component {\r\n\r\n\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: '',\r\n    id: parseInt(window.location.href.split(\"/\")[4])\r\n  };\r\n\r\n  componentDidMount() {\r\n   \r\n    const tokenString = sessionStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    const customerIDString = sessionStorage.getItem('customerID');\r\n    const customerID = parseInt(customerIDString);\r\n    this.setState({ Token: userToken });\r\n    this.setState({ customerID: customerID });\r\n    var appID = parseInt(window.location.href.split(\"/\")[4])\r\n    this.setState({ id: appID });\r\n    this.handleUpdate();\r\n\r\n  }\r\n\r\n  handleUpdate = () => {\r\n    this.setState({ mn: this.props.mn});\r\n    this.setState({ ptFirstName: this.props.ptFirstName});\r\n    this.setState({ ptLastName: this.props.ptLastName});\r\n    this.setState({ appointment_id:this.props.appointment_id });\r\n    this.setState({ rm: this.props.rm });\r\n    this.setState({ tm: this.props.tm });\r\n    this.setState({ datee: this.handleOnloadDate(this.props.datee) });\r\n  }\r\n\r\n  handleDateSubmit = (str) => {\r\n\r\n    const m = str.split(\"-\");\r\n    let str_date = m[2] + \"/\" + m[1] + \"/\" + m[0];\r\n\r\n    return str_date;\r\n\r\n  }\r\n  handleOnloadDate = (str) => {\r\n    const m = str.split(\"/\");\r\n    let str_date = m[2] + \"-\" + m[1] + \"-\" + m[0];\r\n    return str_date;\r\n  }\r\n  Cancel = ()=>\r\n  {\r\n      window.location.reload(true);\r\n  }\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const requestHeader = {\r\n      \"content-Type\": \"application/json\",\r\n      accessIDKey: this.state.Token\r\n    };\r\n    \r\n    const response = await fetch('http://localhost:3000/api/Appointments/setAppointment', {\r\n      method: 'POST',\r\n      headers: requestHeader,\r\n\r\n      body: JSON.stringify({\r\n        customerID: this.state.customerID,\r\n        appointmentID: this.state.appointment_id,\r\n        appointmentDate: this.handleDateSubmit(this.state.datee),\r\n        appointmentTime: this.state.tm,\r\n        patientFirstName: this.state.ptFirstName,\r\n        patientLastName: this.state.ptLastName,\r\n        patientMobileNumber: this.state.mn,\r\n        appointmentRemarks: this.state.rm,\r\n      }),\r\n\r\n    });\r\n\r\n    const body = await response.text();\r\n\r\n        this.setState({ responseToPost: body });\r\n    // if (response.status===200) {\r\n    //   // alert(\"Appointment Updated Successfully\");\r\n    //   this.state.responseToPost=\"Appointment Updated Successfully\";\r\n    //   }\r\n    //  else \r\n    //   {this.state.responseToPost=\"Unable To Update Appointment \" ;}\r\n  \r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"main-wrapper\">\r\n\r\n          <div className=\"page-wrapper\">\r\n            <div className=\"content\">\r\n              <Header />\r\n              <Leftmenu />\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 offset-lg-2\"><h4 className=\"page-title\">Update Appointment</h4></div>\r\n              </div>\r\n\r\n              <p style={{color:'pink', fontSize:'14px',fontWeight:'bold', textAlign:'center' }}>{this.state.responseToPost}</p>\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 offset-lg-2\">\r\n                  \r\n                  <div className=\"mb-2 row\">\r\n                    <div className=\"col-sm-2\">\r\n                      <label>First Name</label>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                      <input type=\"text\" className=\"form-control\" name=\"patientFirstName\" value={this.state.ptFirstName} onChange={e => this.setState({ ptFirstName: e.target.value })} required/>\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-2\">\r\n                      <label>Last Name</label>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                      <input type=\"text\" className=\"form-control\" name=\"patientLastName\" value={this.state.ptLastName} onChange={e => this.setState({ ptLastName: e.target.value })} required/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-2 row\">\r\n                    <div className=\"col-sm-2\">\r\n                      <label>Date</label>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                      <input type=\"date\" className=\"form-control\" name=\"date\" value={this.state.datee} onChange={e => this.setState({ datee: e.target.value })} required/>\r\n\r\n                    </div>\r\n                    <div className=\"col-sm-2\">\r\n                      <label>Time</label>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                      <input type=\"time\" className=\"form-control\" name=\"time\" value={this.state.tm} onChange={e => this.setState({ tm: e.target.value })} required/>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-2 row\">\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>Mobile Number</label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"text\" id=\"uname\" name=\"patientMobileNumber\" required size=\"10\"\r\n                                                placeholder=\"Username\"\r\n                                                minlength=\"10\" maxlength=\"10\" className=\"form-control\" value={this.state.mn} onChange={e => this.setState({ mn: e.target.value })} />\r\n                                        </div>\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>Remark</label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"appointmentRemarks\" value={this.state.rm} onChange={e => this.setState({ rm: e.target.value })} />\r\n                                        </div>\r\n                                    </div>\r\n                  <div className=\"mb-2 row\">\r\n                    <div className=\"m-t-20 text-center\">\r\n                      <button className=\"btn btn-primary\" type=\"submit\" >Update Appointment</button> &nbsp;\r\n                      <button className=\"btn btn-primary\" onClick={ () => this.Cancel()}>Cancel</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </form>\r\n\r\n    );\r\n  }\r\n}\r\nexport default AppointmentUpdate;\r\n\r\n\r\n\r\n","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\AppointmentAdd.js",["123"],[],"import { Link } from 'react-router-dom';\r\nimport Leftmenu from './Navigation/Leftmenu';\r\nimport Header from './Navigation/Header';\r\nimport React, { Component } from \"react\";\r\nclass AppointmentAdd extends Component {\r\n    state = {\r\n        response: '',\r\n        post: '',\r\n        responseToPost: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        const tokenString = sessionStorage.getItem('token');\r\n        const userToken = JSON.parse(tokenString);\r\n        const customerIDString = sessionStorage.getItem('customerID');\r\n        const customerID = parseInt(customerIDString);\r\n        this.setState({ Token: userToken });\r\n        this.setState({ customerID: customerID });\r\n\r\n\r\n    }\r\n\r\n\r\n    handleDate = (str) => {\r\n\r\n        const m = str.split(\"-\");\r\n        let str_date = m[2] + \"/\" + m[1] + \"/\" + m[0];\r\n        this.setState({ datee: str_date })\r\n\r\n    }\r\n    Cancel = ()=>\r\n    {\r\n        window.location.reload(true);\r\n    }\r\n\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const requestHeader = {\r\n            \"content-Type\": \"application/json\",\r\n            accessIDKey: this.state.Token\r\n        };\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: requestHeader,\r\n            body: JSON.stringify({\r\n                date: this.state.datee,\r\n                time: this.state.tm,\r\n                customerID: this.state.customerID,\r\n                customerCategory: \"Gynecologist\",\r\n                patientFirstName: this.state.ptFirstName,\r\n                patientLastName: this.state.ptLastName,\r\n                patientMobileNumber: this.state.mn,\r\n                appointmentRemarks: this.state.rm,\r\n                appointmentStatus: 'Open'\r\n            }),\r\n        }\r\n        const response = await fetch('http://localhost:3000/api/Appointments/postAppointments', requestOptions)\r\n        // .then(error => alert('Response! ' + error.returnMessage)).catch(error => alert('Error! ' + error.returnMessage))\r\n        // .catch(error => alert('Error! ' + error.message))\r\n        //.then(response => alert('Response! added' ))\r\n        // .then(response => alert('Response! ' + error.message)).catch(error => alert('Error! ' + error.message))\r\n        \r\n        const body = await response.text();\r\n\r\n        this.setState({ responseToPost: body });\r\n  \r\n\r\n        // if (response.status===200) {\r\n        //     // alert(\"Appointment Added Successfully\");\r\n        //     this.state.responseToPost=\"Appointment Added Successfully\";\r\n           \r\n        //     }\r\n        //    else\r\n        //     {this.state.responseToPost=body;\r\n        // }\r\n\r\n        \r\n            \r\n\r\n    };\r\n\r\n    render() {\r\n        // if (!this.state.IsAppointmentAdded) {\r\n        //     alert(\"Appointment Added Successfully\");\r\n        //     window.location.reload(true);\r\n        //     }\r\n          \r\n        return (\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"main-wrapper\">\r\n\r\n                    <div className=\"page-wrapper\">\r\n                        <div className=\"content\">\r\n                            <Header />\r\n                            <Leftmenu />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-8 offset-lg-2\"><h4 className=\"page-title\">Add Appointment</h4></div>\r\n                            </div>\r\n                            <p style={{color:'pink', fontSize:'14px',fontWeight:'bold', textAlign:'center' }}>{this.state.responseToPost}</p>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-8 offset-lg-2\">\r\n\r\n                                    <div className=\"mb-2 row\">\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>First Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"patientFirstName\" value={this.state.ptFirstName} onChange={e => this.setState({ ptFirstName: e.target.value })} required />\r\n\r\n                                        </div>\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>Last Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"patientLastName\" value={this.state.ptLastName} onChange={e => this.setState({ ptLastName: e.target.value })} required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 row\">\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>Date</label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"date\" id=\"myDate\" className=\"form-control\" name=\"date\" pattern=\"\\d{4}-\\d{2}-\\d{2}\" value={this.state.dt} onChange={e => this.handleDate(e.target.value)} required/>\r\n\r\n                                        </div>\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>Time</label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"time\" className=\"form-control\" name=\"time\" value={this.state.tm} onChange={e => this.setState({ tm: e.target.value })} required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 row\">\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>Mobile Number</label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"text\" id=\"uname\" name=\"patientMobileNumber\" required size=\"10\"\r\n                                              \r\n                                                minlength=\"10\" maxlength=\"10\" className=\"form-control\"value={this.state.mn} onChange={e => this.setState({ mn: e.target.value })} />\r\n                                        </div>\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>Remark</label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"appointmentRemarks\" value={this.state.rm} onChange={e => this.setState({ rm: e.target.value })} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mb-2 row\">\r\n                                        <div className=\"m-t-20 text-center\">\r\n                                            <button className=\"btn btn-danger submit-btn\" type=\"submit\" >Create Appointment</button> &nbsp;\r\n                                           <button className=\"btn btn-danger submit-btn\" onClick={ () => this.Cancel()}>Cancel</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n\r\n        );\r\n    }\r\n}\r\nexport default AppointmentAdd;\r\n\r\n\r\n\r\n","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\AddServices.js",["124","125"],[],"import Leftmenu from './Navigation/Leftmenu';\r\nimport Header from './Navigation/Header';\r\nimport React, { Component } from \"react\";\r\nclass AddServices extends Component {\r\n    state = {\r\n        response: '',\r\n        post: '',\r\n        responseToPost: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const tokenString = sessionStorage.getItem('token');\r\n        const userToken = JSON.parse(tokenString);\r\n        const customerIDString = sessionStorage.getItem('customerID');\r\n        const customerID = parseInt(customerIDString);\r\n        this.setState({ Token: userToken });\r\n        this.setState({ customerID: customerID });\r\n        this.handleOnload(customerID)\r\n    }\r\n\r\n    handleOnload = async (customerID) => {\r\n        const requestHeader = {\r\n            \"content-Type\": \"application/json\",\r\n            accessIDKey: this.state.Token\r\n        };\r\n        const response = await fetch('http://localhost:3000/api/Admin/getBillingMasterData', {\r\n            method: 'POST',\r\n            headers: requestHeader,\r\n            body: JSON.stringify({\r\n                customerID: customerID\r\n            }),\r\n        });\r\n\r\n        const body = await response.json();\r\n        this.setState({ responseToPost: body.Items });\r\n    }\r\n\r\n    handleDate = (str) => {\r\n\r\n        const m = str.split(\"-\");\r\n        let str_date = m[2] + \"/\" + m[1] + \"/\" + m[0];\r\n        this.setState({ datee: str_date })\r\n\r\n    }\r\n    handleEdit = async (key) => {\r\n        const requestHeader = {\r\n            \"content-Type\": \"application/json\",\r\n            accessIDKey: this.state.Token\r\n        };\r\n\r\n        const response = await fetch('http://localhost:3000/api/Admin/getBillingMasterDataById', {\r\n\r\n            method: 'POST',\r\n            headers: requestHeader,\r\n            body: JSON.stringify({\r\n                serviceID: key,\r\n                customerID: this.state.customerID\r\n            }),\r\n        });\r\n\r\n        const body = await response.json();\r\n        this.setState({\r\n            id: body.Items[0].service_id,\r\n            sName: body.Items[0].serviceName,\r\n            sCost: body.Items[0].serviceCost,\r\n            sCategory: body.Items[0].serviceCategory,\r\n        });\r\n\r\n    }\r\n\r\n    DeleteItems = async (key) => {\r\n        const requestHeader = {\r\n            \"content-Type\": \"application/json\",\r\n            accessIDKey: this.state.Token\r\n        };\r\n        window.location.reload(true);\r\n        const response = await fetch('http://localhost:3000/api/Admin/dropBillingTableRow', {\r\n            method: 'POST',\r\n            headers: requestHeader,\r\n            body: JSON.stringify({\r\n                serviceID: key,\r\n                customerID: this.state.customerID\r\n            }),\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n\r\n            body: JSON.stringify({\r\n                serviceCategory: this.state.sCategory,\r\n                serviceName: this.state.sName,\r\n                serviceCost: this.state.sCost,\r\n                customerID: this.state.customerID\r\n            }),\r\n\r\n        }\r\n        // After Appointment Added\r\n       \r\n        const response = await fetch('http://localhost:3000/api/Admin/postBillingMasterData', requestOptions)\r\n        //.then(response => alert('Response! added' ))\r\n        // .then(response => alert('Response! ' + error.message)).catch(error => alert('Error! ' + error.message))\r\n        const body = await response.json();\r\n        // this.setState({ responseToPost: body.Items });\r\n        // this.setState({ responseToPost: body.Items });\r\nconst bodyString = JSON.stringify(body);\r\nwindow.alert(bodyString);\r\n\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"main-wrapper\">\r\n\r\n                <div className=\"page-wrapper\">\r\n                    <div className=\"content\">\r\n                        <Header />\r\n                        <Leftmenu />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-8 offset-lg-2\"><h4 className=\"page-title\">Add Services</h4></div>\r\n                        </div>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-8 offset-lg-2\">\r\n                    \r\n                           \r\n                                    <div className=\"mb-2 row\">\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>Service Category</label>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-4\">\r\n                                            <select className=\"form-control\" aria-label=\"Default select example\" value={this.state.sCategory} onChange={(e) => this.setState({ sCategory: e.target.value })} required>\r\n                                                <option>Select</option>\r\n                                                <option value=\"Bloodtest\" >Bloodtest</option>\r\n                                                <option value=\"Sonography\">Sonography</option>\r\n                                                <option value=\"OPD\" >OPD</option>\r\n                                                <option value=\"Xray\">Xray</option>\r\n                                                <option value=\"MRI\" >MRI</option>\r\n                                                <option value=\"CT scan\">CT scan</option>\r\n                                                <option value=\"1st Visit\">1st Visit</option>\r\n                                                <option value=\"2nd Visit\">2nd Visit</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>Service Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"sName\" value={this.state.sName} onChange={e => this.setState({ sName: e.target.value })} required />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-2 row\">\r\n                                        <div className=\"col-sm-2\">\r\n                                            <label>Service Cost</label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"text\" className=\"form-control\" maxlength=\"10\" name=\"sCost\" value={this.state.sCost} onChange={e => this.setState({ sCost: e.target.value })} required />\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"mb-2 row\">\r\n                                        <div className=\"m-t-20 text-center\">\r\n\r\n                                            <button className=\"btn btn-danger submit-btn\" type=\"submit\" >Save Services</button> &nbsp;\r\n\r\n                                            <button className=\"btn btn-danger submit-btn\" type=\"submit\" >Print</button> &nbsp;\r\n\r\n                                            <button className=\"btn btn-danger submit-btn\" type=\"submit\" >Download</button> &nbsp;\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </form>\r\n                        <table className=\"table table-border table-striped custom-table datatable mb-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"ant-table-cell\">Service ID</th>\r\n                                    <th className=\"ant-table-cell\">Service Category</th>\r\n                                    <th className=\"ant-table-cell\">Service Name</th>\r\n                                    <th className=\"ant-table-cell\">Service Cost</th>\r\n                                    <th className=\"ant-table-cell\">Action</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n\r\n\r\n                            {this.state.responseToPost.length > 0 && (\r\n                                <tbody>\r\n                                    {this.state.responseToPost.map((items) => (\r\n\r\n\r\n                                        <tr key={items.service_id}>\r\n                                            <td>{items.service_id}</td>\r\n                                            <td>{items.serviceCategory}</td>\r\n                                            <td>{items.serviceName}</td>\r\n                                            <td>{items.serviceCost}</td>\r\n\r\n                                            <td className=\"text-right\">\r\n                                                <div className=\"dropdown dropdown-action\">\r\n                                                    <a className=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                                        aria-expanded=\"false\"><i className=\"fa fa-ellipsis-v\"></i></a>\r\n                                                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                                        <button className=\"dropdown-item\" data-toggle=\"modal\"\r\n                                                            data-target=\"#delete_patient\" onClick={() => this.handleEdit(items.service_id)}><i\r\n                                                                className=\"fa fa-pencil m-r-5\"></i> Edit</button>\r\n\r\n                                                        <button\r\n                                                            className=\"dropdown-item\" data-toggle=\"modal\"\r\n                                                            onClick={() => {\r\n                                                                const confirmBox = window.confirm(\r\n                                                                    \"Do you really want to delete Patient?\"\r\n                                                                )\r\n                                                                if (confirmBox === true) {\r\n                                                                    this.DeleteItems(items.service_id)\r\n                                                                }\r\n                                                            }}><i className=\"fa fa-trash-o m-r-5\"></i> Delete</button>\r\n\r\n                                                        {/* <button className=\"dropdown-item\" data-toggle=\"modal\"\r\n                                                            data-target=\"#delete_patient\" onClick={() => this.DeleteItems(items.service_id)}><i className=\"fa fa-trash-o m-r-5\"></i> Delete</button> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n\r\n                                    ))}</tbody>\r\n                            )}\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\nexport default AddServices;\r\n\r\n\r\n\r\n","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\CustomerUpdate.js",[],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Navigation\\Leftmenu.js",["126","127","128","129","130"],[],"import React from \"react\";\r\nimport {Link} from 'react-router-dom'; \r\n\r\nfunction Leftmenu(){\r\n    \r\n        // const [ dashboardIsOpen, setDashboardIsOpen ] = useState(false);\r\n        // const [ signIsOpen, setSignIsOpen ] = useState(false);\r\n        \r\n        // function dash()\r\n        // {\r\n        //     setDashboardIsOpen(true);\r\n        // }\r\n        // function sign()\r\n        // {\r\n        //     setSignIsOpen(true);\r\n        // }\r\n    return (\r\n   \r\n\r\n<div className=\"sidebar\" id=\"sidebar\">\r\n<div className=\"sidebar-inner slimscroll\">\r\n    <div id=\"sidebar-menu\" className=\"sidebar-menu\">\r\n        <ul>\r\n            <li className=\"menu-title\">Main</li>\r\n            <li>\r\n            <Link to=\"/dashboard\" > \r\n            <i className=\"fa fa-dashboard\"></i>  <span>Dashboard</span>  \r\n             </Link>\r\n            \r\n            </li> \r\n            <li className=\"submenu\">\r\n                <a href=\"\"><i className=\"fa fa-calendar\"></i> <span> Appointment </span> <span\r\n                        className=\"menu-arrow\"></span></a> \r\n\r\n                <ul style={{display:'none'}}>\r\n                    <li><Link to=\"/appoinmentSearch\">Appointments</Link></li>\r\n                   \r\n                </ul>\r\n                \r\n            </li>\r\n            <li className=\"submenu\">\r\n                <a href=\"\"><i className=\"fa fa-user\"></i> <span> Customer </span> <span\r\n                        className=\"menu-arrow\"></span></a>\r\n                <ul style={{display:'none'}}>\r\n                    <li><Link to=\"/customerSearch\">Search Customer</Link></li>\r\n                    <li><Link to=\"/customerRegistration\">Customer Registration</Link></li>\r\n                </ul>\r\n            </li>\r\n            <li className=\"submenu\">\r\n                <a href=\"\"><i className=\"fa fa-money\"></i> <span> Billing </span> <span\r\n                        className=\"menu-arrow\"></span></a>\r\n                <ul style={{display: 'none'}}>\r\n                    <li><Link to='/customerAccounting'> Customer Accounting</Link></li>\r\n                </ul>\r\n            </li>\r\n            \r\n            <li className=\"menu-title\">Reports</li>\r\n            <li className=\"submenu\">\r\n                <a href=\"\"><i className=\"fa fa-flag-o\"></i> <span> Reports </span> <span className=\"menu-arrow\"></span></a>\r\n                <ul style={{display: 'none'}}>\r\n                    <li><Link to='/reportPaymentsByCustomers'> Customer Payments </Link></li>\r\n                </ul>\r\n            </li>\r\n            \r\n            <li className=\"menu-title\">Admin</li>\r\n            <li className=\"submenu\">\r\n                <a href=\"\"><i className=\"fa fa-flag-o\"></i> <span> Services </span> <span className=\"menu-arrow\"></span></a>\r\n                <ul style={{display: 'none'}}>\r\n                    <li><Link to='/addServices'> Add Services </Link></li>\r\n                </ul>\r\n            </li>\r\n           \r\n                \r\n           \r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n\r\n );\r\n}\r\n\r\nexport default Leftmenu;","D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Navigation\\Header.js",["131","132","133","134","135"],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Dashboard_Component\\DashAppoint.js",[],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Dashboard_Component\\DashCancel.js",[],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Dashboard_Component\\DashAttend.js",[],[],"D:\\Gynesono\\Workspace\\gynophase3\\src\\pages\\Dashboard_Component\\DashPending.js",[],[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":18},{"ruleId":"140","severity":1,"message":"144","line":7,"column":16,"nodeType":"142","messageId":"143","endLine":7,"endColumn":25},{"ruleId":"140","severity":1,"message":"145","line":48,"column":9,"nodeType":"142","messageId":"143","endLine":48,"endColumn":12},{"ruleId":"146","severity":1,"message":"147","line":115,"column":7,"nodeType":"148","endLine":115,"endColumn":12},{"ruleId":"140","severity":1,"message":"149","line":149,"column":10,"nodeType":"142","messageId":"143","endLine":149,"endColumn":18},{"ruleId":"140","severity":1,"message":"150","line":41,"column":15,"nodeType":"142","messageId":"143","endLine":41,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":179,"column":69,"nodeType":"148","endLine":180,"endColumn":95},{"ruleId":"153","severity":1,"message":"154","line":206,"column":45,"nodeType":"148","endLine":206,"endColumn":95},{"ruleId":"140","severity":1,"message":"150","line":61,"column":11,"nodeType":"142","messageId":"143","endLine":61,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":201,"column":29,"nodeType":"148","endLine":202,"endColumn":53},{"ruleId":"140","severity":1,"message":"150","line":64,"column":15,"nodeType":"142","messageId":"143","endLine":64,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":181,"column":69,"nodeType":"148","endLine":182,"endColumn":95},{"ruleId":"140","severity":1,"message":"155","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"156","line":1,"column":39,"nodeType":"142","messageId":"143","endLine":1,"endColumn":47},{"ruleId":"140","severity":1,"message":"157","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"151","severity":1,"message":"158","line":45,"column":21,"nodeType":"148","endLine":45,"endColumn":71},{"ruleId":"140","severity":1,"message":"157","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":14},{"ruleId":"140","severity":1,"message":"157","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":14},{"ruleId":"140","severity":1,"message":"150","line":77,"column":15,"nodeType":"142","messageId":"143","endLine":77,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":216,"column":53,"nodeType":"148","endLine":217,"endColumn":79},{"ruleId":"151","severity":1,"message":"158","line":32,"column":17,"nodeType":"148","endLine":32,"endColumn":28},{"ruleId":"151","severity":1,"message":"158","line":42,"column":17,"nodeType":"148","endLine":42,"endColumn":28},{"ruleId":"151","severity":1,"message":"158","line":50,"column":17,"nodeType":"148","endLine":50,"endColumn":28},{"ruleId":"151","severity":1,"message":"158","line":59,"column":17,"nodeType":"148","endLine":59,"endColumn":28},{"ruleId":"151","severity":1,"message":"158","line":67,"column":17,"nodeType":"148","endLine":67,"endColumn":28},{"ruleId":"140","severity":1,"message":"159","line":5,"column":10,"nodeType":"142","messageId":"143","endLine":5,"endColumn":18},{"ruleId":"151","severity":1,"message":"158","line":48,"column":13,"nodeType":"148","endLine":48,"endColumn":59},{"ruleId":"160","severity":1,"message":"161","line":48,"column":37,"nodeType":"162","messageId":"163","endLine":48,"endColumn":58},{"ruleId":"151","severity":1,"message":"158","line":61,"column":17,"nodeType":"148","endLine":61,"endColumn":94},{"ruleId":"151","severity":1,"message":"158","line":72,"column":15,"nodeType":"148","endLine":77,"endColumn":16},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'loginUser' is defined but never used.","'ans' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'setToken' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'getToken' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]